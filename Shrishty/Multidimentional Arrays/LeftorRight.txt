#include<bits/stdc++.h>
using namespace std;
struct query
{
char type;
int pos;
int dest_type;
int result = 100000;
};

int main(int argc, const char *argv[])
{
ios_base::sync_with_stdio(false);
cin.tie(nullptr);

int n, q, temp;
cin >> n >> q;
vector<int> v;
vector<query*> w;
unordered_map<int, vector<query*>> l, r;
for(int i = 0; i < n; i++)
{
cin >> temp;
v.push_back(temp);
}

while(q--)
{
query* qr = new query;
cin >> qr->pos >> qr->dest_type >> qr->type;
if(qr->type == 'L')
l[qr->dest_type].push_back(qr);
if(qr->type == 'R')
r[qr->dest_type].push_back(qr);
w.push_back(qr);
}

for(int p = 0; p < v.size(); p++)
{
int found_type = v[p];
for(query* qx : l[found_type])
{
qx->result = min(qx->result, (qx->pos - p + n) % n);
}
for(query* qx : r[found_type])
{
qx->result = min(qx->result, (p - qx->pos + n) % n);
}
}

for(query* qx : w)
{
if(qx->result == 100000)
cout << "-1" << endl;
else
cout << qx->result << endl;
delete qx;
}
}